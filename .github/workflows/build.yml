name: Build Colony Player

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      release:
        description: 'Create a release'
        required: false
        default: false
        type: boolean

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Windows installer
        run: npm run make:win
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Colony-Player-Windows
          path: |
            dist/*.exe
            dist/*.exe.blockmap

  build-mac:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build macOS DMG
        run: npm run make:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Colony-Player-macOS
          path: |
            dist/*.dmg
            dist/*.dmg.blockmap

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential rpm fakeroot dpkg
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Linux packages
        run: npm run make:linux
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Colony-Player-Linux
          path: |
            dist/*.AppImage
            dist/*.deb

  create-release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.release == 'true'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Display structure of downloaded files
        run: ls -R
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            Colony-Player-Windows/*.exe
            Colony-Player-macOS/*.dmg
            Colony-Player-Linux/*.AppImage
            Colony-Player-Linux/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
